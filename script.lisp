#|
Copyright 2014 Guillaume LE VAILLANT

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
|#


(in-package :peercoin-blockchain-parser)


(defconstant +op-0+ #x00)
(defconstant +op-pushdata1+ #x4c)
(defconstant +op-pushdata2+ #x4d)
(defconstant +op-pushdata4+ #x4e)
(defconstant +op-1negate+ #x4f)
(defconstant +op-reserved+ #x50)
(defconstant +op-1+ #x51)
(defconstant +op-2+ #x52)
(defconstant +op-3+ #x53)
(defconstant +op-4+ #x54)
(defconstant +op-5+ #x55)
(defconstant +op-6+ #x56)
(defconstant +op-7+ #x57)
(defconstant +op-8+ #x58)
(defconstant +op-9+ #x59)
(defconstant +op-10+ #x5a)
(defconstant +op-11+ #x5b)
(defconstant +op-12+ #x5c)
(defconstant +op-13+ #x5d)
(defconstant +op-14+ #x5e)
(defconstant +op-15+ #x5f)
(defconstant +op-16+ #x60)
(defconstant +op-nop+ #x61)
(defconstant +op-ver+ #x62)
(defconstant +op-if+ #x63)
(defconstant +op-notif+ #x64)
(defconstant +op-verif+ #x65)
(defconstant +op-vernotif+ #x66)
(defconstant +op-else+ #x67)
(defconstant +op-endif+ #x68)
(defconstant +op-verify+ #x69)
(defconstant +op-return+ #x6a)
(defconstant +op-toaltstack+ #x6b)
(defconstant +op-fromaltstack+ #x6c)
(defconstant +op-2drop+ #x6d)
(defconstant +op-2dup+ #x6e)
(defconstant +op-3dup+ #x6f)
(defconstant +op-2over+ #x70)
(defconstant +op-2rot+ #x71)
(defconstant +op-2swap+ #x72)
(defconstant +op-ifdup+ #x73)
(defconstant +op-depth+ #x74)
(defconstant +op-drop+ #x75)
(defconstant +op-dup+ #x76)
(defconstant +op-nip+ #x77)
(defconstant +op-over+ #x78)
(defconstant +op-pick+ #x79)
(defconstant +op-roll+ #x7a)
(defconstant +op-rot+ #x7b)
(defconstant +op-swap+ #x7c)
(defconstant +op-tuck+ #x7d)
(defconstant +op-cat+ #x7e)
(defconstant +op-substr+ #x7f)
(defconstant +op-left+ #x80)
(defconstant +op-right+ #x81)
(defconstant +op-size+ #x82)
(defconstant +op-invert+ #x83)
(defconstant +op-and+ #x84)
(defconstant +op-or+ #x85)
(defconstant +op-xor+ #x86)
(defconstant +op-equal+ #x87)
(defconstant +op-equalverify+ #x88)
(defconstant +op-reserved1+ #x89)
(defconstant +op-reserved2+ #x8a)
(defconstant +op-1add+ #x8b)
(defconstant +op-1sub+ #x8c)
(defconstant +op-2mul+ #x8d)
(defconstant +op-2div+ #x8e)
(defconstant +op-negate+ #x8f)
(defconstant +op-abs+ #x90)
(defconstant +op-not+ #x91)
(defconstant +op-0notequal+ #x92)
(defconstant +op-add+ #x93)
(defconstant +op-sub+ #x94)
(defconstant +op-mul+ #x95)
(defconstant +op-div+ #x96)
(defconstant +op-mod+ #x97)
(defconstant +op-lshift+ #x98)
(defconstant +op-rshift+ #x99)
(defconstant +op-booland+ #x9a)
(defconstant +op-boolor+ #x9b)
(defconstant +op-numequal+ #x9c)
(defconstant +op-numequalverify+ #x9d)
(defconstant +op-numnotequal+ #x9e)
(defconstant +op-lessthan+ #x9f)
(defconstant +op-greaterthan+ #xa0)
(defconstant +op-lessthanorequal+ #xa1)
(defconstant +op-greaterthanorequal+ #xa2)
(defconstant +op-min+ #xa3)
(defconstant +op-max+ #xa4)
(defconstant +op-within+ #xa5)
(defconstant +op-ripemd160+ #xa6)
(defconstant +op-sha1+ #xa7)
(defconstant +op-sha256+ #xa8)
(defconstant +op-hash160+ #xa9)
(defconstant +op-hash256+ #xaa)
(defconstant +op-codeseparator+ #xab)
(defconstant +op-checksig+ #xac)
(defconstant +op-checksigverify+ #xad)
(defconstant +op-checkmultisig+ #xae)
(defconstant +op-checkmultisigverify+ #xaf)
(defconstant +op-nop1+ #xb0)
(defconstant +op-nop2+ #xb1)
(defconstant +op-nop3+ #xb2)
(defconstant +op-nop4+ #xb3)
(defconstant +op-nop5+ #xb4)
(defconstant +op-nop6+ #xb5)
(defconstant +op-nop7+ #xb6)
(defconstant +op-nop8+ #xb7)
(defconstant +op-nop9+ #xb8)
(defconstant +op-nop10+ #xb9)
(defconstant +op-smallinteger+ #xfa)
(defconstant +op-pubkeys+ #xfb)
(defconstant +op-pubkeyhash+ #xfd)
(defconstant +op-pubkey+ #xfe)
(defconstant +op-invalidopcode+ #xff)


(defun get-output-address (script)
  "Extract or compute the hash of the destination address in a SCRIPT."
  (cond ((and (= (length script) 25)
              (= (aref script 0) +op-dup+)
              (= (aref script 1) +op-hash160+)
              (= (aref script 2) 20) ; op-pushdata 20
              (= (aref script (- (length script) 2)) +op-equalverify+)
              (= (aref script (- (length script) 1)) +op-checksig+))
         (subseq script 3 23))

        ((and (= (length script) 67)
              (= (aref script 0) 65) ; op pushdata 65
              (= (aref script (- (length script) 1)) +op-checksig+))
         (let ((key (subseq script 1 66)))
           (ripemd160 (sha256d key))))

        ((and (= (length script) 35)
              (= (aref script 0) 33) ; op pushdata 33
              (= (aref script (- (length script) 1)) +op-checksig+))
         (let ((hash (subseq script 1 34)))
           (ripemd160 (sha256 hash))))

        ((and (= (length script) 23)
              (= (aref script 0) +op-hash160+)
              (= (aref script 1) 20) ; op pushdata 20
              (= (aref script (- (length script) 1)) +op-equal+))
         (subseq script 2 22))))
